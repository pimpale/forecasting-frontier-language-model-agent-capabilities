{"input":"Please solve the following coding issue:\n\nZero-argument Min() and Max()\nRight now `Min()` and `Max()` with no arguments raise `ValueError: The Max/Min functions must have arguments.`. It might be mathematically more convenient to have them return `oo` and `-oo`, respectively. See https://en.wikipedia.org/wiki/Empty_set#Extended_real_numbers for why these are valid answers mathematically. \n","choices":null,"target":"","id":"sympy__sympy-15809","metadata":{"base_commit":"28d913d3cead6c5646307ffa6540b21d65059dfd","patch":"diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,8 +339,6 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n-        if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n \n         args = (sympify(arg) for arg in args)\n \n","PASS_TO_PASS":["test_minmax_assumptions","test_issue_8413","test_root","test_real_root","test_rewrite_MaxMin_as_Heaviside","test_rewrite_MaxMin_as_Piecewise","test_issue_11099","test_issue_12638","test_instantiation_evaluation","test_rewrite_as_Abs"],"FAIL_TO_PASS":["test_Min","test_Max"],"test_patch":"diff --git a/sympy/functions/elementary/tests/test_miscellaneous.py b/sympy/functions/elementary/tests/test_miscellaneous.py\n--- a/sympy/functions/elementary/tests/test_miscellaneous.py\n+++ b/sympy/functions/elementary/tests/test_miscellaneous.py\n@@ -86,7 +86,8 @@ def test_Min():\n     assert Min(p, p_).func is Min\n \n     # lists\n-    raises(ValueError, lambda: Min())\n+    assert Min() == S.Infinity\n+    assert Min(x) == x\n     assert Min(x, y) == Min(y, x)\n     assert Min(x, y, z) == Min(z, y, x)\n     assert Min(x, Min(y, z)) == Min(z, y, x)\n@@ -157,7 +158,8 @@ def test_Max():\n \n     # lists\n \n-    raises(ValueError, lambda: Max())\n+    assert Max() == S.NegativeInfinity\n+    assert Max(x) == x\n     assert Max(x, y) == Max(y, x)\n     assert Max(x, y, z) == Max(z, y, x)\n     assert Max(x, Max(y, z)) == Max(z, y, x)\n","version":"1.4","repo":"sympy/sympy","environment_setup_commit":"73b3f90093754c5ed1561bd885242330e3583004","hints_text":"Okk I will fix this issue.","created_at":"2019-01-20T06:08:26Z"},"sandbox":["docker","/home/fidgetsinner/.cache/inspect_swebench_eval/compose_files/sweb.eval.x86_64.sympy__sympy-15809:latest.yaml"],"files":null,"setup":null}